import * as yup from 'yup';

const schema = yup.object().shape({
	email: yup
		.string()
		.required('Поле обязательно для заполнения')
		.min(6, 'Длина поля от 6 до 256 символов')
		.max(256, 'Длина поля от 6 до 256 символов')
		.email('E-mail может содержать: цифры, дефис, точку, нижнее подчеркивание')
		.trim()
		.matches(
			/^[a-zA-Z0-9][a-zA-Z0-9_.-]*[a-zA-Z0-9]@[a-zA-Z0-9]+(?:\.[a-zA-Zа-яА-Я0-9-]+)*\.[a-zA-Zа-яА-Я]{2,}$/,
			'E-mail может содержать: цифры, дефис, точку, нижнее подчеркивание'
		)
		.max(256, 'Проверьте правильность ввода'),
	username: yup
		.string()
		.required('Поле обязательно для заполнения')
		.trim()
		.min(2, 'Длина поля от 2 до 30 символов')
		.max(30, 'Длина поля от 2 до 30 символов')
		.matches(
			/^[а-яА-Яa-zA-Z]+$/,
			'Никнейм должен содержать только кириллицу или латиницу'
		)
		.matches(
			/^[а-яА-Яa-zA-Z]+$/,
			'Никнейм должен содержать только кириллицу или латиницу'
		),
	password: yup
		.string()
		.trim()
		.required('Поле обязательно для заполнения')
		.min(8, 'Проверьте правильность ввода')
		.max(50, 'Проверьте правильность ввода')
		.matches(
			/^(?=.*[0-9])(?=.*[!@#$%^&*])(?=.*[a-zA-Zа-яА-Я]).{8,20}$/,
			'Проверьте правильность ввода'
		),
	/* eslint-disable */
	re_password: yup
		/* eslint-enable */
		.string()
		.trim()
		.required('Поле обязательно для заполнения')
		.min(8, 'Проверьте правильность ввода')
		.max(50, 'Проверьте правильность ввода')
		.matches(
			/^(?=.*[0-9])(?=.*[!@#$%^&*])(?=.*[a-zA-Zа-яА-Я]).{8,20}$/,
			'Проверьте правильность ввода'
		),
});
export default schema;
